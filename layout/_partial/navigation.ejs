<div class="header">

  <div class="avatar">
    <!--
    <a href="<%- theme.avatar.path %>">
      <% if (config.lazyload && config.lazyload.enable) { %>
        <img no-lazy src="" alt="" id="avatar-image">
      <% } else { %>
        <img src="" alt="" id="avatar-image">
      <% } %>
    </a>
    -->
  </div>
  <!-- <div class="nickname"><a href="<%- theme.avatar.path %>"><%- theme.avatar.author_nickname %></a></div> -->

  <div class="navbar">
    <ul>
      <%
        for(let item of theme.navbar) {
          if (item.enable) {
      %>
        <li class="nav-item" data-path="<%- item.path %>">
          <a href="<%- item.path %>"><%- item.name %></a>
        </li>
      <%
          }
        }
      %>
    </ul>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    var avatarDir = '<%- theme.avatar.author_path %>'; // 获取图片文件夹路径
    var images = []; // 存储图片路径
    var imgRegex = /\.(\w+)$/; // 用于匹配文件扩展名的正则表达式

    // 假设您已经有了一个包含图片路径的数组，这里仅做示例
    // 在实际应用中，您可能需要通过其他方法获取这些路径
    // 下面的循环是示例，实际使用时可能需要根据实际情况调整
    for (var i = 1; i <= 1; i++) {
      images.push(avatarDir + '/avatar' + i + '.png');
    }

    var randomIndex = Math.floor(Math.random() * images.length);
    var randomImage = images[randomIndex];
    document.getElementById('avatar-image').src = randomImage;
  });
  document.addEventListener('DOMContentLoaded', function() {
    // ... 你之前的代码 ...
  
    // 获取当前页面的路径
    var currentPath = window.location.pathname;
  
    // 获取所有导航项
    var navItems = document.querySelectorAll('.navbar .nav-item');
  
    // 移除所有导航项的 active 类
    navItems.forEach(function(item) {
      item.classList.remove('active');
    });
  
    // 为当前页面的导航项添加 active 类
    navItems.forEach(function(item) {
      if (item.getAttribute('data-path') === currentPath) {
        item.classList.add('active');
      }
    });
  });
</script>

<%- js(['/js/activeNav.js']) %>
